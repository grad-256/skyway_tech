name: main

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: ${{ github.actor == 'dependabot[bot]' && 'write' || 'read' }}
      id-token: write
      pull-requests: write
      checks: write
      statuses: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Cache pnpm dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Setup test environment
        run: |
          if [[ "${{ github.event.pull_request.user.login }}" == "dependabot[bot]" ]]; then
            echo "Running Dependabot install without --immutable"
            pnpm install

            git config --global user.name 'github-actions[bot]'
            git config --global user.email 'github-actions[bot]@users.noreply.github.com'

            if [[ -n $(git status --porcelain pnpm-lock.yaml) ]]; then
              git add pnpm-lock.yaml
              git commit -m "chore(deps): update pnpm-lock.yaml"
              git push origin HEAD:${{ github.head_ref }}
            fi
          else
            echo "Running normal install with --immutable"
            pnpm install --immutable
          fi

      - name: Generate
        run: pnpm generate

      - name: Type check
        run: pnpm type-check

      - name: Lint
        run: pnpm lint

      - name: Build
        run: pnpm build